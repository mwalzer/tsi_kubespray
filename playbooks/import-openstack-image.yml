# requires shade
- hosts: localhost
  gather_facts: False
  vars:
    img_version: "1409.7.0"
    img_prefix: "ContainerOS"
    url_prefix: "https://stable.release.core-os.net/amd64-usr/"
    url_suffix: "/coreos_production_openstack_image.img"
    compress_suffix: ".bz2"
    timeout: 1800
  tasks:
    - name: "set image facts"
      set_fact:
        image_name: "{{img_prefix}}-{{img_version}}"
    - name: "check if image is present in OpenStack"
      os_image_facts:
        image: "{{ image_name }}"
    - name: "download base image"
      command: |
        curl {{ url_prefix }}{{ img_version }}{{ url_suffix }} -o /tmp/{{ image_name }}.qcow2{{ compress_suffix }}
      notify:
        - delete local image
      async: "{{timeout}}"
      poll: 0
      register: kubenow_download
      when: openstack_image == None
    - name: "wait for image download to be done"
      async_status: jid={{ kubenow_download.ansible_job_id }}
      register: download_status
      until: download_status.finished
      retries: "{{((timeout | int) / 10) | int}}"
      delay: 10
      when: openstack_image == None
    - name: "optional uncompress of image"
      shell: |
        bunzip2 /tmp/{{ image_name }}.qcow2{{ compress_suffix }}
      when: compress_suffix == ".bz2"
    - name: "upload image to OpenStack"
      os_image:
        name: "{{ image_name }}"
        filename: "{{ image_name }}.qcow2"
        container_format: bare
        disk_format: qcow2
        state: present
        timeout: "{{timeout}}"
      async: "{{timeout}}"
      poll: 0
      register: kubenow_upload
      when: openstack_image == None
    - name: "wait for image upload to be done"
      async_status: jid={{ kubenow_upload.ansible_job_id }}
      register: upload_status
      until: upload_status.finished
      retries: "{{((timeout | int) / 10) | int}}"
      delay: 10
      when: openstack_image == None
  handlers:
    - name: delete local image
      file:
        path: "{{ image_name }}.qcow2"
        state: absent
